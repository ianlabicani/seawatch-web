rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // users collection
    match /users/{userId} {
      allow read: if request.auth != null &&  (isCoastGuard() || request.auth.uid == userId);
      allow create: if request.auth != null; // only authenticated users can create a user
      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;
      allow delete: if false;
    }

    function isCoastGuard() {
      return getAuthUser().data.role == 'coast-guard';
    }

    function isOwner(userId) {
      return userId == resource.data.uid;
    }

    function getAuthUser() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    // trackings collection
    match /trackings/{trackingId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());
      allow delete: if isCoastGuard();
    }

    match /alerts/{alertId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if isCoastGuard();
    }

    match /reports/{reportId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if isCoastGuard();
    }
  }
}

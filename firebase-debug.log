[debug] [2024-12-27T06:05:01.616Z] ----------------------------------------------------------------------
[debug] [2024-12-27T06:05:01.619Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Ian\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js emulators:start --import data --export-on-exit data
[debug] [2024-12-27T06:05:01.619Z] CLI Version:   13.28.0
[debug] [2024-12-27T06:05:01.620Z] Platform:      win32
[debug] [2024-12-27T06:05:01.620Z] Node Version:  v22.11.0
[debug] [2024-12-27T06:05:01.620Z] Time:          Fri Dec 27 2024 14:05:01 GMT+0800 (Singapore Standard Time)
[debug] [2024-12-27T06:05:01.620Z] ----------------------------------------------------------------------
[debug] 
[debug] [2024-12-27T06:05:01.667Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2024-12-27T06:05:01.667Z] > authorizing via signed-in user (labicaniian@gmail.com)
[debug] [2024-12-27T06:05:01.757Z] java version "17.0.12" 2024-07-16 LTS

[debug] [2024-12-27T06:05:01.757Z] Java(TM) SE Runtime Environment (build 17.0.12+8-LTS-286)
Java HotSpot(TM) 64-Bit Server VM (build 17.0.12+8-LTS-286, mixed mode, sharing)

[debug] [2024-12-27T06:05:01.786Z] Parsed Java major version: 17
[info] i  emulators: Starting emulators: auth, firestore, hosting {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: auth, firestore, hosting"}}
[debug] [2024-12-27T06:05:01.800Z] [logging] Logging Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2024-12-27T06:05:01.800Z] [auth] Authentication Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2024-12-27T06:05:01.800Z] [firestore] Firestore Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2024-12-27T06:05:01.801Z] [firestore.websocket] websocket server for firestore only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2024-12-27T06:05:01.801Z] [hosting] Hosting Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2024-12-27T06:05:01.801Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400},{"address":"::1","family":"IPv6","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000},{"address":"::1","family":"IPv6","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"auth":[{"address":"127.0.0.1","family":"IPv4","port":9099}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}],"hosting":[{"address":"127.0.0.1","family":"IPv4","port":5000}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2024-12-27T06:05:01.803Z] [hub] writing locator at C:\Users\Ian\AppData\Local\Temp\hub-seawatch-web.json
[info] i  firestore: Importing data from C:\Users\Ian\Desktop\PROJECTS\seawatch-web\data\firestore_export\firestore_export.overall_export_metadata {"metadata":{"emulator":{"name":"firestore"},"message":"Importing data from C:\\Users\\Ian\\Desktop\\PROJECTS\\seawatch-web\\data\\firestore_export\\firestore_export.overall_export_metadata"}}
[debug] [2024-12-27T06:05:01.816Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2024-12-27T06:05:01.816Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2024-12-27T06:05:01.816Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","C:\\Users\\Ian\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","seawatch-web","--seed_from_export","C:\\Users\\Ian\\Desktop\\PROJECTS\\seawatch-web\\data\\firestore_export\\firestore_export.overall_export_metadata","--rules","C:\\Users\\Ian\\Desktop\\PROJECTS\\seawatch-web\\firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\Ian\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"seawatch-web\",\"--seed_from_export\",\"C:\\\\Users\\\\Ian\\\\Desktop\\\\PROJECTS\\\\seawatch-web\\\\data\\\\firestore_export\\\\firestore_export.overall_export_metadata\",\"--rules\",\"C:\\\\Users\\\\Ian\\\\Desktop\\\\PROJECTS\\\\seawatch-web\\\\firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[info] +  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[info] i  auth: Importing config from C:\Users\Ian\Desktop\PROJECTS\seawatch-web\data\auth_export\config.json {"metadata":{"emulator":{"name":"auth"},"message":"Importing config from C:\\Users\\Ian\\Desktop\\PROJECTS\\seawatch-web\\data\\auth_export\\config.json"}}
[info] i  auth: Importing accounts from C:\Users\Ian\Desktop\PROJECTS\seawatch-web\data\auth_export\accounts.json {"metadata":{"emulator":{"name":"auth"},"message":"Importing accounts from C:\\Users\\Ian\\Desktop\\PROJECTS\\seawatch-web\\data\\auth_export\\accounts.json"}}
[debug] [2024-12-27T06:05:07.633Z] Checked if tokens are valid: false, expires at: 1735272144504
[debug] [2024-12-27T06:05:07.634Z] Checked if tokens are valid: false, expires at: 1735272144504
[debug] [2024-12-27T06:05:07.634Z] > refreshing access token with scopes: []
[debug] [2024-12-27T06:05:07.635Z] >>> [apiv2][query] POST https://www.googleapis.com/oauth2/v3/token [none]
[debug] [2024-12-27T06:05:07.635Z] >>> [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2024-12-27T06:05:08.972Z] <<< [apiv2][status] POST https://www.googleapis.com/oauth2/v3/token 200
[debug] [2024-12-27T06:05:08.972Z] <<< [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2024-12-27T06:05:08.988Z] >>> [apiv2][query] GET https://firebasehosting.googleapis.com/v1beta1/projects/seawatch-web/sites 
[debug] [2024-12-27T06:05:10.473Z] <<< [apiv2][status] GET https://firebasehosting.googleapis.com/v1beta1/projects/seawatch-web/sites 200
[debug] [2024-12-27T06:05:10.473Z] <<< [apiv2][body] GET https://firebasehosting.googleapis.com/v1beta1/projects/seawatch-web/sites {"sites":[{"name":"projects/seawatch-web/sites/seawatch-web","defaultUrl":"https://seawatch-web.web.app","type":"DEFAULT_SITE"}]}
[debug] [2024-12-27T06:05:10.473Z] Checked if tokens are valid: true, expires at: 1735283107972
[debug] [2024-12-27T06:05:10.473Z] Checked if tokens are valid: true, expires at: 1735283107972
[debug] [2024-12-27T06:05:10.473Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web/webApps/-/config [none]
[debug] [2024-12-27T06:05:11.554Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web/webApps/-/config 200
[debug] [2024-12-27T06:05:11.554Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web/webApps/-/config {"projectId":"seawatch-web","appId":"1:772755499356:web:7decfd4434f5bd1b3db999","storageBucket":"seawatch-web.firebasestorage.app","apiKey":"AIzaSyCEstX6G_E9ijV32zbMcLpuBgUqyRlgito","authDomain":"seawatch-web.firebaseapp.com","messagingSenderId":"772755499356","measurementId":"G-GEEQE94NK1"}
[debug] [2024-12-27T06:05:11.560Z] Checked if tokens are valid: true, expires at: 1735283107972
[debug] [2024-12-27T06:05:11.560Z] Checked if tokens are valid: true, expires at: 1735283107972
[debug] [2024-12-27T06:05:11.561Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web [none]
[debug] [2024-12-27T06:05:11.844Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web 200
[debug] [2024-12-27T06:05:11.844Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web {"projectId":"seawatch-web","projectNumber":"772755499356","displayName":"seawatch-web","name":"projects/seawatch-web","resources":{"hostingSite":"seawatch-web"},"state":"ACTIVE","etag":"1_b0d1ce58-a0ff-4e16-9f49-2bbc5fdc08a0"}
[info] i  hosting[seawatch-web]: Serving hosting files from: dist/seawatch-web {"metadata":{"emulator":{"name":"hosting"},"message":"Serving hosting files from: \u001b[1mdist/seawatch-web\u001b[22m"}}
[info] +  hosting[seawatch-web]: Local server: http://127.0.0.1:5000 {"metadata":{"emulator":{"name":"hosting"},"message":"Local server: \u001b[4m\u001b[1mhttp://127.0.0.1:5000\u001b[22m\u001b[24m"}}
[debug] [2024-12-27T06:05:11.934Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: . If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌────────────────┬────────────────┬─────────────────────────────────┐
│ Emulator       │ Host:Port      │ View in Emulator UI             │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Authentication │ 127.0.0.1:9099 │ http://127.0.0.1:4000/auth      │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Firestore      │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Hosting        │ 127.0.0.1:5000 │ n/a                             │
└────────────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub running at 127.0.0.1:4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-27T11:02:07.666Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-27T11:02:07.666Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  (isCoastGuard() || request.auth.uid == userId);\n      allow create: if request.auth != null && isCoastGuard(); // only coast guard can create user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return userId == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if true;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n\n    match /alerts/{alertId} {\n      allow read: if true;\n      allow create: if request.auth != null;\n      allow update: if request.auth != null;\n      allow delete: if isCoastGuard();\n    }\n\n    match /reports/{reportId} {\n      allow read: if true;\n      allow create: if request.auth != null;\n      allow update: if request.auth != null;\n      allow delete: if isCoastGuard();\n    }\n\n    \n  }\n}\n"}]}}
[debug] [2024-12-27T11:02:07.763Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-27T11:02:07.763Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":14,"currentOffset":614,"endOffset":620},"description":"Unused function: isOwner.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":19,"column":24,"currentOffset":655,"endOffset":662},"description":"Invalid variable name: resource.","severity":"WARNING"}]}
[warn] !  firestore.rules:18:14 - WARNING Unused function: isOwner. 
[warn] !  firestore.rules:19:24 - WARNING Invalid variable name: resource. 
[info] +  firestore: Rules updated. 

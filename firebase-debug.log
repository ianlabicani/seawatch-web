[debug] [2024-12-26T02:42:42.475Z] ----------------------------------------------------------------------
[debug] [2024-12-26T02:42:42.479Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Ian\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js emulators:start --import data
[debug] [2024-12-26T02:42:42.479Z] CLI Version:   13.28.0
[debug] [2024-12-26T02:42:42.479Z] Platform:      win32
[debug] [2024-12-26T02:42:42.479Z] Node Version:  v22.11.0
[debug] [2024-12-26T02:42:42.480Z] Time:          Thu Dec 26 2024 10:42:42 GMT+0800 (Singapore Standard Time)
[debug] [2024-12-26T02:42:42.480Z] ----------------------------------------------------------------------
[debug] 
[debug] [2024-12-26T02:42:42.511Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2024-12-26T02:42:42.653Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2024-12-26T02:42:42.653Z] > authorizing via signed-in user (labicaniian@gmail.com)
[debug] [2024-12-26T02:42:42.795Z] java version "17.0.12" 2024-07-16 LTS
Java(TM) SE Runtime Environment (build 17.0.12+8-LTS-286)

[debug] [2024-12-26T02:42:42.796Z] Java HotSpot(TM) 64-Bit Server VM (build 17.0.12+8-LTS-286, mixed mode, sharing)

[debug] [2024-12-26T02:42:42.809Z] Parsed Java major version: 17
[info] i  emulators: Starting emulators: auth, firestore, hosting {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: auth, firestore, hosting"}}
[debug] [2024-12-26T02:42:42.826Z] [logging] Logging Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2024-12-26T02:42:42.826Z] [auth] Authentication Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2024-12-26T02:42:42.826Z] [firestore] Firestore Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2024-12-26T02:42:42.826Z] [firestore.websocket] websocket server for firestore only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2024-12-26T02:42:42.827Z] [hosting] Hosting Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2024-12-26T02:42:42.827Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400},{"address":"::1","family":"IPv6","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000},{"address":"::1","family":"IPv6","port":4000}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"auth":[{"address":"127.0.0.1","family":"IPv4","port":9099}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}],"hosting":[{"address":"127.0.0.1","family":"IPv4","port":5000}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2024-12-26T02:42:42.830Z] [hub] writing locator at C:\Users\Ian\AppData\Local\Temp\hub-seawatch-web.json
[info] i  firestore: Importing data from C:\Users\Ian\Desktop\PROJECTS\seawatch-web\data\firestore_export\firestore_export.overall_export_metadata {"metadata":{"emulator":{"name":"firestore"},"message":"Importing data from C:\\Users\\Ian\\Desktop\\PROJECTS\\seawatch-web\\data\\firestore_export\\firestore_export.overall_export_metadata"}}
[debug] [2024-12-26T02:42:42.845Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2024-12-26T02:42:42.845Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2024-12-26T02:42:42.845Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","C:\\Users\\Ian\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.19.8.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","seawatch-web","--seed_from_export","C:\\Users\\Ian\\Desktop\\PROJECTS\\seawatch-web\\data\\firestore_export\\firestore_export.overall_export_metadata","--rules","C:\\Users\\Ian\\Desktop\\PROJECTS\\seawatch-web\\firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false,"shell":false,"port":8080} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\Ian\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.19.8.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"seawatch-web\",\"--seed_from_export\",\"C:\\\\Users\\\\Ian\\\\Desktop\\\\PROJECTS\\\\seawatch-web\\\\data\\\\firestore_export\\\\firestore_export.overall_export_metadata\",\"--rules\",\"C:\\\\Users\\\\Ian\\\\Desktop\\\\PROJECTS\\\\seawatch-web\\\\firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false,\"shell\":false,\"port\":8080}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[debug] [2024-12-26T02:42:43.233Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2024-12-26T02:42:43.233Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[info] +  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[info] i  auth: Importing config from C:\Users\Ian\Desktop\PROJECTS\seawatch-web\data\auth_export\config.json {"metadata":{"emulator":{"name":"auth"},"message":"Importing config from C:\\Users\\Ian\\Desktop\\PROJECTS\\seawatch-web\\data\\auth_export\\config.json"}}
[info] i  auth: Importing accounts from C:\Users\Ian\Desktop\PROJECTS\seawatch-web\data\auth_export\accounts.json {"metadata":{"emulator":{"name":"auth"},"message":"Importing accounts from C:\\Users\\Ian\\Desktop\\PROJECTS\\seawatch-web\\data\\auth_export\\accounts.json"}}
[debug] [2024-12-26T02:42:54.966Z] Checked if tokens are valid: false, expires at: 1735093980551
[debug] [2024-12-26T02:42:54.966Z] Checked if tokens are valid: false, expires at: 1735093980551
[debug] [2024-12-26T02:42:54.966Z] > refreshing access token with scopes: []
[debug] [2024-12-26T02:42:54.967Z] >>> [apiv2][query] POST https://www.googleapis.com/oauth2/v3/token [none]
[debug] [2024-12-26T02:42:54.967Z] >>> [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2024-12-26T02:42:56.303Z] <<< [apiv2][status] POST https://www.googleapis.com/oauth2/v3/token 200
[debug] [2024-12-26T02:42:56.303Z] <<< [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2024-12-26T02:42:56.318Z] >>> [apiv2][query] GET https://firebasehosting.googleapis.com/v1beta1/projects/seawatch-web/sites 
[debug] [2024-12-26T02:42:59.123Z] <<< [apiv2][status] GET https://firebasehosting.googleapis.com/v1beta1/projects/seawatch-web/sites 200
[debug] [2024-12-26T02:42:59.123Z] <<< [apiv2][body] GET https://firebasehosting.googleapis.com/v1beta1/projects/seawatch-web/sites {"sites":[{"name":"projects/seawatch-web/sites/seawatch-web","defaultUrl":"https://seawatch-web.web.app","type":"DEFAULT_SITE"}]}
[debug] [2024-12-26T02:42:59.123Z] Checked if tokens are valid: true, expires at: 1735184575303
[debug] [2024-12-26T02:42:59.123Z] Checked if tokens are valid: true, expires at: 1735184575303
[debug] [2024-12-26T02:42:59.123Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web/webApps/-/config [none]
[debug] [2024-12-26T02:43:00.292Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web/webApps/-/config 200
[debug] [2024-12-26T02:43:00.292Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web/webApps/-/config {"projectId":"seawatch-web","appId":"1:772755499356:web:7decfd4434f5bd1b3db999","storageBucket":"seawatch-web.firebasestorage.app","apiKey":"AIzaSyCEstX6G_E9ijV32zbMcLpuBgUqyRlgito","authDomain":"seawatch-web.firebaseapp.com","messagingSenderId":"772755499356","measurementId":"G-GEEQE94NK1"}
[debug] [2024-12-26T02:43:00.299Z] Checked if tokens are valid: true, expires at: 1735184575303
[debug] [2024-12-26T02:43:00.299Z] Checked if tokens are valid: true, expires at: 1735184575303
[debug] [2024-12-26T02:43:00.300Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web [none]
[debug] [2024-12-26T02:43:00.618Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web 200
[debug] [2024-12-26T02:43:00.618Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/seawatch-web {"projectId":"seawatch-web","projectNumber":"772755499356","displayName":"seawatch-web","name":"projects/seawatch-web","resources":{"hostingSite":"seawatch-web"},"state":"ACTIVE","etag":"1_b0d1ce58-a0ff-4e16-9f49-2bbc5fdc08a0"}
[info] i  hosting[seawatch-web]: Serving hosting files from: dist/seawatch-web {"metadata":{"emulator":{"name":"hosting"},"message":"Serving hosting files from: \u001b[1mdist/seawatch-web\u001b[22m"}}
[info] +  hosting[seawatch-web]: Local server: http://127.0.0.1:5000 {"metadata":{"emulator":{"name":"hosting"},"message":"Local server: \u001b[4m\u001b[1mhttp://127.0.0.1:5000\u001b[22m\u001b[24m"}}
[debug] [2024-12-26T02:43:00.753Z] Could not find VSCode notification endpoint: FetchError: request to http://localhost:40001/vscode/notify failed, reason: . If you are not running the Firebase Data Connect VSCode extension, this is expected and not an issue.
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌────────────────┬────────────────┬─────────────────────────────────┐
│ Emulator       │ Host:Port      │ View in Emulator UI             │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Authentication │ 127.0.0.1:9099 │ http://127.0.0.1:4000/auth      │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Firestore      │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Hosting        │ 127.0.0.1:5000 │ n/a                             │
└────────────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub running at 127.0.0.1:4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T04:36:51.185Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T04:36:51.185Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if isCoastGuard();\n      allow update: if request.auth != null && request.resource.data.username == resource.data.username;\n      allow delete: if isCoastGuard();\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coast-guard';\n    }\n\n    function isOwnDocument(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read, create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T04:36:51.291Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T04:36:51.291Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T07:31:14.628Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T07:31:14.628Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if true;\n      allow update: if request.auth != null && request.resource.data.username == resource.data.username;\n      allow delete: if isCoastGuard();\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coast-guard';\n    }\n\n    function isOwnDocument(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read, create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T07:31:14.701Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T07:31:14.702Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:01:55.917Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:01:55.918Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if isCoastGuard();\n      allow update: if request.auth != null && request.resource.data.username == resource.data.username;\n      allow delete: if isCoastGuard();\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coast-guard';\n    }\n\n    function isOwnDocument(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read, create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:01:55.966Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:01:55.966Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:10:23.892Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:10:23.892Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null && request.resource.data.username == resource.data.username;\n      allow delete: if isCoastGuard();\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coast-guard';\n    }\n\n    function isOwnDocument(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read, create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:10:23.933Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:10:23.933Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:11:21.488Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:11:21.489Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null && isOwnDocument() && request.resource.data.username == resource.data.username;\n      allow delete: if isCoastGuard();\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coast-guard';\n    }\n\n    function isOwnDocument(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read, create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:11:21.542Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:11:21.542Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":48,"currentOffset":297,"endOffset":309},"description":"Incorrect number of arguments supplied to function: isOwnDocument.","severity":"WARNING"}]}
[warn] !  firestore.rules:10:48 - WARNING Incorrect number of arguments supplied to function: isOwnDocument. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:11:48.222Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:11:48.222Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null && isOwnDocument() && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coast-guard';\n    }\n\n    function isOwnDocument(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read, create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:11:48.257Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:11:48.257Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":48,"currentOffset":297,"endOffset":309},"description":"Incorrect number of arguments supplied to function: isOwnDocument.","severity":"WARNING"}]}
[warn] !  firestore.rules:10:48 - WARNING Incorrect number of arguments supplied to function: isOwnDocument. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:13:30.047Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:13:30.047Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null && isOwnDocument(userId) && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coast-guard';\n    }\n\n    function isOwnDocument(userId) {\n      return request.auth != null && request.auth.uid == userId;\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read, create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:13:30.089Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:13:30.089Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:14:23.126Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:14:23.126Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coast-guard';\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read, create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:14:23.156Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:14:23.156Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":8,"column":40,"currentOffset":182,"endOffset":194},"description":"Invalid function name: isOwnDocument.","severity":"WARNING"}]}
[warn] !  firestore.rules:8:40 - WARNING Invalid function name: isOwnDocument. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:15:43.135Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:15:43.135Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coast-guard';\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read, create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n\n    function getUserData(userId) {\n      return get(/databases/$(database)/documents/users/$(userId)).data;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:15:43.165Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:15:43.165Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":8,"column":40,"currentOffset":182,"endOffset":194},"description":"Invalid function name: isOwnDocument.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":29,"column":14,"currentOffset":937,"endOffset":947},"description":"Unused function: getUserData.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":30,"column":14,"currentOffset":972,"endOffset":974},"description":"Invalid function name: get.","severity":"WARNING"}]}
[warn] !  firestore.rules:8:40 - WARNING Invalid function name: isOwnDocument. 
[warn] !  firestore.rules:29:14 - WARNING Unused function: getUserData. 
[warn] !  firestore.rules:30:14 - WARNING Invalid function name: get. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:16:29.551Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:16:29.551Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coast-guard';\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read, create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n\n    function getUser(userId) {\n      return get(/databases/$(database)/documents/users/$(userId)).data;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:16:29.581Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:16:29.581Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":8,"column":40,"currentOffset":182,"endOffset":194},"description":"Invalid function name: isOwnDocument.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":29,"column":14,"currentOffset":937,"endOffset":943},"description":"Unused function: getUser.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":30,"column":14,"currentOffset":968,"endOffset":970},"description":"Invalid function name: get.","severity":"WARNING"}]}
[warn] !  firestore.rules:8:40 - WARNING Invalid function name: isOwnDocument. 
[warn] !  firestore.rules:29:14 - WARNING Unused function: getUser. 
[warn] !  firestore.rules:30:14 - WARNING Invalid function name: get. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:16:44.419Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:16:44.419Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && getUser(request.auth.uid).data.role == 'coast-guard';\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read, create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n\n    function getUser(userId) {\n      return get(/databases/$(database)/documents/users/$(userId)).data;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:16:44.452Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:16:44.452Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":8,"column":40,"currentOffset":182,"endOffset":194},"description":"Invalid function name: isOwnDocument.","severity":"WARNING"}]}
[warn] !  firestore.rules:8:40 - WARNING Invalid function name: isOwnDocument. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:18:30.200Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:18:30.200Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && getUser().data.role == 'coast-guard';\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read: if ;\n      allow create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n\n    function getUser() {\n      return get(/databases/$(database)/documents/users/$(requst.aueth.uid)).data;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:18:30.224Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:18:30.225Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":20,"column":22,"currentOffset":618,"endOffset":618},"description":"Missing conditional expression after 'if'.","severity":"ERROR"}]}
[warn] !  firestore.rules:20:22 - ERROR Missing conditional expression after 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:18:33.495Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:18:33.495Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && getUser().role == 'coast-guard';\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read: if ;\n      allow create: if request.auth != null;\n      allow update: if isTrackingOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isTrackingOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n\n    function getUser() {\n      return get(/databases/$(database)/documents/users/$(requst.aueth.uid)).data;\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:18:33.513Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:18:33.513Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":20,"column":22,"currentOffset":613,"endOffset":613},"description":"Missing conditional expression after 'if'.","severity":"ERROR"}]}
[warn] !  firestore.rules:20:22 - ERROR Missing conditional expression after 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:23:05.988Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:23:05.988Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && getUser().data.role == 'coast-guard';\n    }\n\n    // trackings collection\n  match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || isOwner();\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if isOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n\n    function getUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:23:06.022Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:23:06.022Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":8,"column":40,"currentOffset":182,"endOffset":194},"description":"Invalid function name: isOwnDocument.","severity":"WARNING"}]}
[warn] !  firestore.rules:8:40 - WARNING Invalid function name: isOwnDocument. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:23:13.366Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:23:13.366Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && getUser().data.role == 'coast-guard';\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || isOwner();\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if isOwner() || isCoastGuard();\n      allow delete: if isCoastGuard();\n    }\n\n    function isOwner() {\n      return request.auth != null && resource.data.uid == request.auth.uid;\n    }\n\n    function getUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:23:13.398Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:23:13.398Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":8,"column":40,"currentOffset":182,"endOffset":194},"description":"Invalid function name: isOwnDocument.","severity":"WARNING"}]}
[warn] !  firestore.rules:8:40 - WARNING Invalid function name: isOwnDocument. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:27:23.344Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:27:23.344Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && getUser().data.role == 'coast-guard';\n    }\n\n    function getUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n\n\n   \n  }\n}\n"}]}}
[debug] [2024-12-26T08:27:23.384Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:27:23.384Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":8,"column":40,"currentOffset":182,"endOffset":194},"description":"Invalid function name: isOwnDocument.","severity":"WARNING"}]}
[warn] !  firestore.rules:8:40 - WARNING Invalid function name: isOwnDocument. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:27:26.623Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:27:26.623Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null;\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && getUser().data.role == 'coast-guard';\n    }\n\n    function getUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:27:26.655Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:27:26.655Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":8,"column":40,"currentOffset":182,"endOffset":194},"description":"Invalid function name: isOwnDocument.","severity":"WARNING"}]}
[warn] !  firestore.rules:8:40 - WARNING Invalid function name: isOwnDocument. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:27:40.787Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:27:40.787Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && getUser().data.role == 'coast-guard';\n    }\n\n    function getUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:27:40.815Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:27:40.815Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":8,"column":40,"currentOffset":182,"endOffset":194},"description":"Invalid function name: isOwnDocument.","severity":"WARNING"}]}
[warn] !  firestore.rules:8:40 - WARNING Invalid function name: isOwnDocument. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T08:28:12.184Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T08:28:12.184Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if isCoastGuard() || isOwnDocument(userId);\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return request.auth != null && getUser().data.role == 'coast-guard';\n    }\n\n    function getUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T08:28:12.212Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T08:28:12.212Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":8,"column":40,"currentOffset":182,"endOffset":194},"description":"Invalid function name: isOwnDocument.","severity":"WARNING"}]}
[warn] !  firestore.rules:8:40 - WARNING Invalid function name: isOwnDocument. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:23:40.831Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:23:40.832Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  isCoastGuard() || isOwner();\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner() {\n      return request.auth.uid == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:23:40.904Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:23:40.904Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:23:51.367Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:23:51.367Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  isCoastGuard() || isOwner();\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner() {\n      return request.auth.uid == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:23:51.415Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:23:51.415Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:23:51.566Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:23:51.567Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  isCoastGuard() || isOwner();\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner() {\n      return request.auth.uid == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:23:51.603Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:23:51.603Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:23:51.707Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:23:51.707Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  isCoastGuard() || isOwner();\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner() {\n      return request.auth.uid == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:23:51.744Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:23:51.744Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:23:51.863Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:23:51.863Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  isCoastGuard() || isOwner();\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner() {\n      return request.auth.uid == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:23:51.888Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:23:51.888Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:23:52.020Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:23:52.020Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  isCoastGuard() || isOwner();\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner() {\n      return request.auth.uid == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:23:52.046Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:23:52.046Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:23:52.194Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:23:52.194Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  isCoastGuard() || isOwner();\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner() {\n      return request.auth.uid == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:23:52.218Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:23:52.218Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:26:47.815Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:26:47.815Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  isCoastGuard() || isOwner();\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return userId == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:26:47.843Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:26:47.844Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":8,"column":65,"currentOffset":207,"endOffset":213},"description":"Incorrect number of arguments supplied to function: isOwner.","severity":"WARNING"}]}
[warn] !  firestore.rules:8:65 - WARNING Incorrect number of arguments supplied to function: isOwner. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:26:52.762Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:26:52.762Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  isCoastGuard() || isOwner(userId);\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return userId == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:26:52.791Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:26:52.791Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:28:12.852Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:28:12.852Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if true;\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return userId == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:28:12.877Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:28:12.877Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":14,"currentOffset":539,"endOffset":545},"description":"Unused function: isOwner.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":19,"column":24,"currentOffset":580,"endOffset":587},"description":"Invalid variable name: resource.","severity":"WARNING"}]}
[warn] !  firestore.rules:18:14 - WARNING Unused function: isOwner. 
[warn] !  firestore.rules:19:24 - WARNING Invalid variable name: resource. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:28:37.467Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:28:37.467Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  (isCoastGuard() || isOwner(userId));\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return userId == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:28:37.493Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:28:37.493Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:30:29.689Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:30:29.689Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  (isCoastGuard() || isOwner(userId));\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return true;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:30:29.716Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:30:29.716Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":22,"currentOffset":603,"endOffset":608},"description":"Unused variable: userId.","severity":"WARNING"}]}
[warn] !  firestore.rules:18:22 - WARNING Unused variable: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:31:12.343Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:31:12.343Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  (isCoastGuard() || request.auth.uid == userId);\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return userId == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if isCoastGuard() || resource.data.uid == request.auth.uid;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:31:12.368Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:31:12.368Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":14,"currentOffset":606,"endOffset":612},"description":"Unused function: isOwner.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":19,"column":24,"currentOffset":647,"endOffset":654},"description":"Invalid variable name: resource.","severity":"WARNING"}]}
[warn] !  firestore.rules:18:14 - WARNING Unused function: isOwner. 
[warn] !  firestore.rules:19:24 - WARNING Invalid variable name: resource. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T09:44:27.250Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T09:44:27.250Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  (isCoastGuard() || request.auth.uid == userId);\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return userId == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if true;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T09:44:27.279Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T09:44:27.280Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":14,"currentOffset":606,"endOffset":612},"description":"Unused function: isOwner.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":19,"column":24,"currentOffset":647,"endOffset":654},"description":"Invalid variable name: resource.","severity":"WARNING"}]}
[warn] !  firestore.rules:18:14 - WARNING Unused function: isOwner. 
[warn] !  firestore.rules:19:24 - WARNING Invalid variable name: resource. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T12:43:46.819Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T12:43:46.820Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  (isCoastGuard() || request.auth.uid == userId);\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return userId == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if true;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n\n    match /alerts/{alertId} {\n      allow read: if true;\n      allow create: if request.auth != null;\n      allow update: if request.auth != null;\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T12:43:46.883Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T12:43:46.883Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":14,"currentOffset":606,"endOffset":612},"description":"Unused function: isOwner.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":19,"column":24,"currentOffset":647,"endOffset":654},"description":"Invalid variable name: resource.","severity":"WARNING"}]}
[warn] !  firestore.rules:18:14 - WARNING Unused function: isOwner. 
[warn] !  firestore.rules:19:24 - WARNING Invalid variable name: resource. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T13:01:06.322Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T13:01:06.322Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  (isCoastGuard() || request.auth.uid == userId);\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return userId == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if true;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n\n    match /alerts/{alertId} {\n      allow read: if true;\n      allow create: if request.auth != null;\n      allow update: if request.auth != null;\n      allow delete: if isCoastGuard();\n    }\n\n    match /reports/{alertId} {\n      allow read: if true;\n      allow create: if request.auth != null;\n      allow update: if request.auth != null;\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T13:01:06.366Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T13:01:06.366Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":14,"currentOffset":606,"endOffset":612},"description":"Unused function: isOwner.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":19,"column":24,"currentOffset":647,"endOffset":654},"description":"Invalid variable name: resource.","severity":"WARNING"}]}
[warn] !  firestore.rules:18:14 - WARNING Unused function: isOwner. 
[warn] !  firestore.rules:19:24 - WARNING Invalid variable name: resource. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T13:01:12.519Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T13:01:12.519Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  (isCoastGuard() || request.auth.uid == userId);\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return userId == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if true;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n\n    match /alerts/{alertId} {\n      allow read: if true;\n      allow create: if request.auth != null;\n      allow update: if request.auth != null;\n      allow delete: if isCoastGuard();\n    }\n\n    match /reports/{reportId} {\n      allow read: if true;\n      allow create: if request.auth != null;\n      allow update: if request.auth != null;\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T13:01:12.550Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T13:01:12.550Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":14,"currentOffset":606,"endOffset":612},"description":"Unused function: isOwner.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":19,"column":24,"currentOffset":647,"endOffset":654},"description":"Invalid variable name: resource.","severity":"WARNING"}]}
[warn] !  firestore.rules:18:14 - WARNING Unused function: isOwner. 
[warn] !  firestore.rules:19:24 - WARNING Invalid variable name: resource. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2024-12-26T14:53:52.700Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules [none]
[debug] [2024-12-26T14:53:52.700Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // users collection\n    match /users/{userId} {\n      allow read: if request.auth != null &&  (isCoastGuard() || request.auth.uid == userId);\n      allow create: if request.auth != null; // only authenticated users can create a user\n      allow update: if request.auth != null &&  request.auth.uid == userId && request.resource.data.username == resource.data.username;\n      allow delete: if false;\n    }\n\n    function isCoastGuard() {\n      return getAuthUser().data.role == 'coast-guard';\n    }\n\n    function isOwner(userId) {\n      return userId == resource.data.uid;\n    }\n\n    function getAuthUser() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid));\n    }\n\n    // trackings collection\n    match /trackings/{trackingId} {\n      allow read: if true;\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;\n      allow update: if request.auth != null && ( resource.data.uid == request.auth.uid || isCoastGuard());\n      allow delete: if isCoastGuard();\n    }\n\n    match /alerts/{alertId} {\n      allow read: if true;\n      allow create: if request.auth != null;\n      allow update: if request.auth != null;\n      allow delete: if isCoastGuard();\n    }\n\n    match /reports/{reportId} {\n      allow read: if true;\n      allow create: if request.auth != null;\n      allow update: if request.auth != null;\n      allow delete: if isCoastGuard();\n    }\n  }\n}\n"}]}}
[debug] [2024-12-26T14:53:52.754Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules 200
[debug] [2024-12-26T14:53:52.755Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/seawatch-web:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":14,"currentOffset":606,"endOffset":612},"description":"Unused function: isOwner.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":19,"column":24,"currentOffset":647,"endOffset":654},"description":"Invalid variable name: resource.","severity":"WARNING"}]}
[warn] !  firestore.rules:18:14 - WARNING Unused function: isOwner. 
[warn] !  firestore.rules:19:24 - WARNING Invalid variable name: resource. 
[info] +  firestore: Rules updated. 
